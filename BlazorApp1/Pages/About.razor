@page "/about"
@inject HttpClient Http

@if (cards == null)
{
    <p><em>Loading...</em></p>
}

else
{
    <div class="container bg-gray-200 mx-auto w-full h-full">
      <div class="relative wrap overflow-hidden p-10 h-full">
        <div class="border-2-2 absolute border-opacity-20 border-gray-700 h-full border " style="left: 50%"></div>
    
        @foreach (var card in cards.Select((value, i) => new {i, value}))
        {
                var value = card.value;
                var index = card.i + 1;

                @if(index % 2 == 0)
                {
                    <div class="mb-8 flex justify-between flex-row-reverse items-center w-full left-timeline">
                      <div class="order-1 w-5/12"></div>
                      <div class="z-20 flex items-center order-1 bg-gray-800 shadow-xl w-8 h-8 rounded-full">
                        <h1 class="mx-auto text-white font-semibold text-lg">@index</h1>
                      </div>
                      <div class="order-1 bg-red-400 rounded-lg shadow-xl w-5/12 px-6 py-4">
                        <h3 class="mb-3 font-bold text-white text-xl">@value.Title</h3>
                        <p class="text-sm font-medium leading-snug tracking-wide text-white text-opacity-100">@value.Body</p>
                      </div>
                    </div>
                }
                else
                {
                    <div class="mb-8 flex justify-between items-center w-full right-timeline">
                      <div class="order-1 w-5/12"></div>
                      <div class="z-20 flex items-center order-1 bg-gray-800 shadow-xl w-8 h-8 rounded-full">
                        <h1 class="mx-auto font-semibold text-lg text-white">@index</h1>
                      </div>
                      <div class="order-1 bg-gray-400 rounded-lg shadow-xl w-5/12 px-6 py-4">
                        <h3 class="mb-3 font-bold text-gray-800 text-xl">@value.Title</h3>
                        <p class="text-sm leading-snug tracking-wide text-gray-900 text-opacity-100">@value.Body</p>
                      </div>
                    </div>
                }
        }
            
      </div>
    </div>
}

@code{

    private InfoCard[] cards = null;

    protected override async Task OnInitializedAsync()
    {
        cards = await Http.GetFromJsonAsync<InfoCard[]>("data/card.info.json");
    }
    
    class InfoCard
    {
        public string Title { get; set; }
        public string Body { get; set; }
    };
}