@page "/"
@inject IJSRuntime JSRuntime;

<div class="p-10 flex h-screen justify-center items-center">  
    <!--Card 1-->
    <div class="max-w-sm display:flex rounded overflow-hidden shadow-lg content-center" >
          <img class="w-full" src=@imageUrl alt="me">
      <div class="px-6 py-4 content-centre">
        <div class="font-bold text-xl mb-2 item-centre">Nawa Mumbwe</div>
        <p class="text-gray-700 text-base">
          It's me, I'm the content
        </p>
      </div>
      <div class="px-6 pt-4 pb-2">
        
        <a href="/projects"> <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">#code</span></a>
        <button @onclick="NavigateLichess" ><span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">#chess</span></button>
        <button @onclick="OpenMusicModal" id="open-btn" ><span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">#music</span></button>
        
      </div>
    </div>
</div>

<!-- This example requires Tailwind CSS v2.0+ -->
<div @ref="_element" style="display:none" class="fixed z-10 inset-0 overflow-y-auto" aria-labelledby="modal-title my-modal" role="dialog" aria-modal="true">
  <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
    <!--
      Background overlay, show/hide based on modal state.

      Entering: "ease-out duration-300"
        From: "opacity-0"
        To: "opacity-100"
      Leaving: "ease-in duration-200"
        From: "opacity-100"
        To: "opacity-0"
    -->
    <button @onclick="CloseMusicModal" ><div id="my-modal" class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div></button>

    <!-- This element is to trick the browser into centering the modal contents. -->
    <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

    <!--
      Modal panel, show/hide based on modal state.

      Entering: "ease-out duration-300"
        From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        To: "opacity-100 translate-y-0 sm:scale-100"
      Leaving: "ease-in duration-200"
        From: "opacity-100 translate-y-0 sm:scale-100"
        To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
    -->
    <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
      <div class="bg-gradient-to-r from-green-400 md:to-blue-500 px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div  class="sm:flex sm:items-start ">
          <iframe src="https://open.spotify.com/embed/playlist/4ki12ptODZSRTVmDc7ioud?utm_source=generator" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="clipboard-write; encrypted-media; fullscreen; picture-in-picture"></iframe>
        </div>
      </div>
      
    </div>
  </div>
</div>

  @code{

    public string imageUrl { get; set; }
    private readonly Random _random = new Random();
    private ElementReference _element;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        string[] my_urls = { "me1.jpg", "me2.jpg", "me3.jpg", "me4.jpg", "me5.jpg", "me6.jpg", "me7.jpg", "me8.jpg", "me9.jpg"};
        imageUrl = my_urls[_random.Next(0, 9)];
    }

    private void OpenMusicModal()
    {
        JSRuntime.InvokeAsync<object>("OpenModal", _element);
    }

    private void CloseMusicModal()
    {
        JSRuntime.InvokeAsync<object>("CloseModal", _element);
    }

    private void NavigateLichess()
    {
        JSRuntime.InvokeAsync<object>("open", "https://lichess.org/@/Nawa094", "_blank");
    }
  }